if [ ! "$_CBSD_DIALOG_SUBR" ]; then
_CBSD_DIALOG_SUBR=1
###
BSDCFG_SHARE="/usr/local/cbsd/share/bsdconfig"
[ ! -f "${BSDCFG_SHARE}/common.subr" ] && err 1 "${N1_COLOR}You have no bsdconfig stuff: ${N2_COLOR}${BSDCFG_SHARE}/common.subr${N0_COLOR}"
. $BSDCFG_SHARE/common.subr
f_dprintf "%s: loading includes..." "$0"
f_include $BSDCFG_SHARE/dialog.subr
f_include $BSDCFG_SHARE/mustberoot.subr
BSDCFG_LIBE="/usr/local/cbsd/share/libexec/bsdconfig" APP_DIR="080.console"

: ${msg_yes:="Yes"}
: ${msg_no:="No"}
: ${msg_ok:="Ok"}
: ${msg_cancel:="Exit"}
: ${msg_extra:="Extra"}

if [ -n "${EXTHELP}" ]; then
	cbsd_help="--help-button --help-label \"\$msg_help\""
else
	cbsd_help=
fi

#
# Exit codes for [X]dialog(1)
# some of them still missed in old dialog.subr version (DFLY?)
: ${DIALOG_OK:=${SUCCESS:-0}}
: ${DIALOG_CANCEL:=${FAILURE:-1}}
: ${DIALOG_HELP:=2}
: ${DIALOG_ITEM_HELP:=2}
: ${DIALOG_EXTRA:=3}
: ${DIALOG_ITEM_HELP:=4}
: ${DIALOG_ERROR:=254} # sh(1) can't handle the default of `-1'
: ${DIALOG_ESC:=255}

# default menubox without help button and with popup notes
# require: menu_list
cbsd_menubox()
{
	local height width rows

	mtag=

	eval f_dialog_menu_with_help_size height width rows \
		\"\$title\"  \
		\"\$btitle\" \
		\"\$prompt\" \
		\"\$hline\"  \
		$menu_list

	height=$(( height + 1 ))

	menu_choice=$( eval $DIALOG			\
		--clear					\
		--title \"\$title\"			\
		--backtitle \"\$btitle\"		\
		--hline \"\$hline\"			\
		--item-help				\
		--ok-label \"\$msg_ok\"			\
		--cancel-label \"${msg_cancel}\"	\
		${USE_XDIALOG:+--help \"\"}		\
		--default-item \"\$defaultitem\"	\
		--menu \" \$prompt \"			\
		$height $width $rows			\
		$menu_list				\
		2>&1 >&$DIALOG_TERMINAL_PASSTHRU_FD
		)

	local retval=$?

	f_dialog_data_sanitize menu_choice
	f_dialog_menutag_store "$menu_choice"
	f_dialog_menutag_fetch mtag
	return ${retval}
}


# default menubox without help button
# require: menu_list
cbsd_menubox_simple()
{
	local height width rows

	mtag=
	menu_choice=

	eval f_dialog_menu_size height width rows \
		\"\$title\" \"\$btitle\" \"\$prompt\" \"\$hline\" $menu_list

	height=$(( height + 1 ))

	menu_choice=$( eval $DIALOG				\
			--clear					\
			--title \"\$title\"			\
			--backtitle \"\$btitle\"		\
			--hline \"\$hline\"			\
			--ok-label \"\$msg_ok\"			\
			--cancel-label \"\$msg_exit\"		\
			--default-item \"\$defaultitem\"	\
			--menu \" \$prompt \"			\
			$height $width $rows			\
			$menu_list				\
			2>&1 >&$DIALOG_TERMINAL_PASSTHRU_FD
		)

	local retval=$?

	f_dialog_data_sanitize menu_choice
	f_dialog_menutag_store "$menu_choice"
	f_dialog_menutag_fetch mtag
	return ${retval}
}


# default menubox with help button
# require: menu_list
cbsd_menubox_with_help()
{
	local height width rows

	mtag=

	eval f_dialog_menu_with_help_size height width rows \
		\"\$title\"  \
		\"\$btitle\" \
		\"\$prompt\" \
		\"\$hline\"  \
		$menu_list

	height=$(( height + 1 ))

	menu_choice=$( eval $DIALOG			\
		--clear					\
		--title \"\$title\"			\
		--backtitle \"\$btitle\"		\
		--hline \"\$hline\"			\
		--item-help				\
		--ok-label \"\$msg_ok\"			\
		--cancel-label \"${msg_cancel}\"	\
		${cbsd_help}				\
		${USE_XDIALOG:+--help \"\"}		\
		--default-item \"\$defaultitem\"	\
		--menu \" \$prompt \"			\
		$height $width $rows			\
		$menu_list				\
		2>&1 >&$DIALOG_TERMINAL_PASSTHRU_FD
		)

	local retval=$?

	f_dialog_data_sanitize menu_choice
	f_dialog_menutag_store "$menu_choice"
	f_dialog_menutag_fetch mtag
	return ${retval}
}




# default menubox with extra button
# require: menu_list
# $extra_label for custom button label
cbsd_menubox_with_extra_button()
{
	local height width rows

	[ -z "${extra_label}" ] && extra_label="Reset"

	mtag=

	eval f_dialog_menu_with_help_size height width rows \
		\"\${title}\"  \
		\"\${btitle}\" \
		\"\${prompt}\" \
		\"\${hline}\"  \
		${menu_list}

	height=$(( height + 1 ))

	menu_choice=$( eval ${DIALOG}			\
		--clear					\
		--title \"\${title}\"			\
		--backtitle \"\${btitle}\"		\
		--hline \"\${hline}\"			\
		--item-help				\
		--ok-label \"\${msg_ok}\"		\
		--cancel-label \"${msg_cancel}\"	\
		--extra-button				\
		--extra-label \"${extra_label}\"	\
		${USE_XDIALOG:+--help \"\"}		\
		--default-item \"\${defaultitem}\"	\
		--menu \" \${prompt} \"			\
		${height} ${width} ${rows}		\
		${menu_list}				\
		2>&1 >&${DIALOG_TERMINAL_PASSTHRU_FD}
		)

	local retval=$?

	f_dialog_data_sanitize menu_choice
	f_dialog_menutag_store "${menu_choice}"
	f_dialog_menutag_fetch mtag

	return ${retval}
}

# $extra_label for custom button label
cbsd_menubox_with_extra_button_with_help()
{
	local height width rows

	[ -z "${extra_label}" ] && extra_label="Reset"
	[ -z "${help_label}" ] && help_label="Help"

	mtag=

	eval f_dialog_menu_with_help_size height width rows \
		\"\${title}\"  \
		\"\${btitle}\" \
		\"\${prompt}\" \
		\"\${hline}\"  \
		${menu_list}

	height=$(( height + 1 ))

	menu_choice=$( eval ${DIALOG}			\
		--clear					\
		--title \"\${title}\"			\
		--backtitle \"\${btitle}\"		\
		--hline \"\${hline}\"			\
		--item-help				\
		--help-button				\
		--help-label "${help_label}"		\
		--ok-label \"\${msg_ok}\"		\
		--cancel-label \"${msg_cancel:}\"	\
		--extra-button				\
		--extra-label \"${extra_label}\"	\
		${USE_XDIALOG:+--help \"\"}		\
		--default-item \"\${defaultitem}\"	\
		--menu \" \${prompt} \"			\
		${height} ${width} ${rows}		\
		${menu_list}				\
		2>&1 >&${DIALOG_TERMINAL_PASSTHRU_FD}
		)

	local retval=$?

	f_dialog_data_sanitize menu_choice
	f_dialog_menutag_store "${menu_choice}"
	f_dialog_menutag_fetch mtag

	return ${retval}
}

cbsd_msgbox_with_extra_button()
{
	local _msg_len=$( strlen "$@" )
	_msg_len=$(( _msg_len + 5 ))

	$DIALOG --title "${title}" --clear \
	--help-button \
	--help-label "${msg_help}" \
	--msgbox "$@" 5 ${_msg_len}

	return $?
}

cbsd_inputbox_simple()
{
	local _input

	f_dialog_title " $title "

	f_dialog_input _input "${prompt}:" "${defaultitem}" \
		"${_message}" || return $?

	local retval=$?

	[ -n "${_input}" -a ${retval} -eq 0 ] && mtag="${_input}"
	[ -z "${_input}" -a ${retval} -eq 0 ] && mtag=
	return ${retval}
}

# custom f_dialog_input for extra button
f_dialog_input_extra()
{
	local __var_to_set="$1" __prompt="$2" __init="$3" __hline="$4"

	# NOTE: Function name appended to prevent __var_{height,width} values
	#       from becoming local (and thus preventing setvar from working).
	local __height_input __width_input
	f_dialog_inputbox_size __height_input __width_input \
		"$DIALOG_TITLE" "$DIALOG_BACKTITLE" \
		"$__prompt" "$__init" "$__hline"

	__height_input=$(( __height_input + 1 ))

	local __opterm="--"
	[ "$USE_XDIALOG" ] && __opterm=

	local __dialog_input
	__dialog_input=$(
		$DIALOG \
			--title "$DIALOG_TITLE"		\
			--backtitle "$DIALOG_BACKTITLE"	\
			--hline "$__hline"		\
			--ok-label "$msg_ok"		\
			--cancel-label "$msg_cancel"	\
			--extra-button			\
			--extra-label "${extra_label}"	\
			--inputbox "$__prompt"		\
			$__height_input $__width_input	\
			$__opterm "$__init"		\
			2>&1 >&$DIALOG_TERMINAL_PASSTHRU_FD
	)
	local __retval=$?

	# Remove warnings and leading/trailing whitespace from user input
	f_dialog_line_sanitize __dialog_input

	setvar "$__var_to_set" "$__dialog_input"
	return $__retval
}

cbsd_inputbox_with_extra_button()
{
	local _input

	f_dialog_title " ${title} "

	f_dialog_input_extra _input "${prompt}:" "${defaultitem}" \
		"${_message}" || return $?

	local retval=$?

	[ -n "${_input}" -a ${retval} -eq 0 ] && mtag="${_input}"
	return ${retval}
}

###
fi
