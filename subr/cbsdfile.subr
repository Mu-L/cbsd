if [ ! "$_CBSD_CBSDFILE_SUBR" ]; then
_CBSD_CBSDFILE_SUBR=1
###

ARGS=
CBSDFILE_ARGS=

# exclude jname= and mode= params from args str
for i in $*; do
	prefix6=$( substr --pos=0 --len=6 --str="${i}" )
	prefix9=$( substr --pos=0 --len=9 --str="${i}" )
	[ "${prefix6}" = "jname=" ] && continue
	[ "${prefix9}" = "cbsdfile=" ] && continue

	# find 'param=value' to pass as environment vars
	strpos --str="${i}" --search="="
	_pos=$?
	if [ ${_pos} -ne 0 ]; then
		if [ -z "${CBSDFILE_ARGS}" ]; then
			CBSDFILE_ARGS="${i}"
		else
			CBSDFILE_ARGS="${CBSDFILE_ARGS} ${i}"
		fi
		continue
	fi

	if [ -z "${ARGS}" ]; then
		ARGS="${i}"
	else
		ARGS="${ARGS} ${i}"
	fi
done

# single jname only
[ -n "${jname}" ] && ARGS="${jname}"

if [ -d "${cbsdfile}" ]; then
	# try to find CBSDfile inside the dir
	cbsdfile="${cbsdfile}/CBSDfile"
fi

# push original pwd dir: we need to restore it when exit
export OCBSD_PWD="${CBSD_PWD}"

if [ -n "${cbsdfile}" ]; then
	# is full path?
	_path_pref=$( substr --pos=0 --len=1 --str=${cbsdfile} )

	if [ "${_path_pref}" != "/" ]; then
		cbsdfile="${workdir}/${cbsdfile}"
	fi

	Makefile="${cbsdfile}"
	myworkdir=$( ${DIRNAME_CMD} ${cbsdfile} )
else
	Makefile="${CBSD_PWD}/CBSDfile"
	myworkdir="${CBSD_PWD}"
fi

# inherit cwd from args (when run via tasks)
if [ -n "${cwd}" ]; then
	CBSD_PWD="${cwd}"
	myworkdir="${cwd}"
fi
[ ! -r "${Makefile}" ] && err 1 "${N1_COLOR}no such CBSDMake file: ${N2_COLOR}${Makefile}${N0_COLOR}"
cd ${myworkdir}
export CBSD_PWD="${myworkdir}"

all_jail_list=$( ${GREP_CMD} -E '^jail_[a-zA-Z0-9_@%:][-a-zA-Z0-9_@%:]*\(\)$' ${Makefile} | ${XARGS_CMD} | ${TR_CMD} -d "()" | ${SED_CMD} s#jail_##g )
all_bhyve_list=$( ${GREP_CMD} -E '^bhyve_[a-zA-Z0-9_@%:][-a-zA-Z0-9_@%:]*\(\)$' ${Makefile} | ${XARGS_CMD} | ${TR_CMD} -d "()" | ${SED_CMD} s#bhyve_##g )
all_qemu_list=$( ${GREP_CMD} -E '^qemu_[a-zA-Z0-9_@%:][-a-zA-Z0-9_@%:]*\(\)$' ${Makefile} | ${XARGS_CMD} | ${TR_CMD} -d "()" | ${SED_CMD} s#qemu_##g )
all_forms_list=$( ${GREP_CMD} -E '^forms_[a-zA-Z0-9]+_[a-zA-Z0-9]+\(\)$' ${Makefile} | ${XARGS_CMD} | ${TR_CMD} -d "()" )

jail_list=
jail_num=0
bhyve_list=
bhyve_num=0
qemu_list=
qemu_num=0

if [ -n "${ARGS}" ]; then
	# limit jail env by args ?
	for i in ${ARGS}; do
		found=0
		for j in ${all_jail_list}; do
			if [ "${i}" = "${j}" ]; then
				jail_num=$(( jail_num + 1 ))
				if [ -n "${jail_list}" ]; then
					jail_list="${jail_list} ${i}"
				else
					jail_list="${i}"
				fi
				found=1
				break
			fi
		done
		[ ${found} -eq 1 ] && continue
		for j in ${all_bhyve_list}; do
			if [ "${i}" = "${j}" ]; then
				bhyve_num=$(( bhyve_num + 1 ))
				if [ -n "${bhyve_list}" ]; then
					bhyve_list="${bhyve_list} ${i}"
				else
					bhyve_list="${i}"
				fi
				found=1
				break
			fi
		done
		for j in ${all_qemu_list}; do
			if [ "${i}" = "${j}" ]; then
				qemu_num=$(( qemu_num + 1 ))
				if [ -n "${qemu_list}" ]; then
					qemu_list="${qemu_list} ${i}"
				else
					qemu_list="${i}"
				fi
				found=1
				break
			fi
		done
	done
else
	jail_list="${all_jail_list}"
	for i in ${jail_list}; do
		jail_num=$(( jail_num + 1 ))
	done

	bhyve_list="${all_bhyve_list}"
	for i in ${bhyve_list}; do
		bhyve_num=$(( bhyve_num + 1 ))
	done

	qemu_list="${all_qemu_list}"
	for i in ${qemu_list}; do
		qemu_num=$(( qemu_num + 1 ))
	done
fi

_cbsdfile_found_env="${jail_list}${bhyve_list}${qemu_list}"
[ -z "${_cbsdfile_found_env}" ] && err 1 "${N1_COLOR}${CBSD_APP}: CBSDfile: no such environments${N0_COLOR}"
unset _cbsdfile_found_env

num_env=$(( jail_num + bhyve_num + qemu_num ))

[ ${num_env} -gt 1 ] && ${ECHO} "${N1_COLOR}number of environments: ${N2_COLOR}${num_env}${N0_COLOR}" 1>&2

# read config
. ${Makefile}

###
fi
