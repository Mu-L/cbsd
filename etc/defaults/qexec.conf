# Settings for qexec command
# These settings can be configured and/or overwritten per-host
# by placing this file into ${jailsysdir}/jname/etc

# custom command for login
# - qexec_cmd="internal" - internal/default behavior
# Another example:
#   qexec_cmd="${SSH_CMD}  -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oConnectTimeout=5 -oServerAliveInterval=10 -i /root/.ssh/id_ed25519 your_user@${ip4_addr}"
#   qexec_cmd="timeout 60 ${SSH_CMD}  -oBatchMode=yes /root/.ssh/id_ed25519 your_user@${ip4_addr}"

# cloud-init support login via node's key
if [ -r ${jailsysdir}/${jname}/rc.conf_${jname} ]; then

	. ${jailsysdir}/${jname}/rc.conf_${jname}

	if [ "${is_cloud}" = "1" ]; then
		# todo: multi-user handler?
		eval _pubkey="\$ci_user_pubkey_${ci_user_add}"

		if [ -z "${_pubkey}" ]; then
			# try lookup for global
			eval _pubkey="\$ci_user_pubkey"
		fi

		# multiple IP in ip4_addr? use first
		OIFS="${IFS}"
		IFS=","
		for i in ${ip4_addr}; do
			_tmp_x_my_ip="${i}"
			break
		done
		IFS="${OIFS}"

		if [ "${_pubkey}" = ".ssh/id_rsa.pub" ]; then
			echo "cloud init qexec via node key: ${SSH_CMD} -i ${workdir}/.ssh/id_rsa ${ci_user_add}@${_tmp_x_my_ip}" 1>&2
			qexec_cmd="${SSH_CMD} -T -oStrictHostKeyChecking=no -oBatchMode=yes -oConnectTimeout=5 -oServerAliveInterval=10 -i ${workdir}/.ssh/id_rsa ${ci_user_add}@${_tmp_x_my_ip}"
			unset _tmp_x_my_ip
		fi
	else
		qexec_cmd="internal"
	fi

else
	qexec_cmd="internal"
fi
