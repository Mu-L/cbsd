# Settings for qlogin command
# These settings can be configured and/or overwritten per-host
# by placing this file into ${jailsysdir}/jname/etc

# custom command for login
# - login_cmd="internal" - internal/default behavior
# Another example:
#   login_cmd="/usr/bin/ssh your_user@${ip4_addr}"
#   login_cmd="su -m user -c \"vncviewer 127.0.0.1:${vm_vnc_port}\""
#   login_cmd="login -f root ${jname}"
#   login_cmd="/usr/local/bin/vncviewer ${ip4_addr}"
#   login_cmd="/usr/local/bin/xfreerdp /w:1280 /h:1024  /u:Administrator /v:${ip4_addr}"

# cloud-init support login via node's key
if [ -d ${jailsysdir}/${jname}/cloud-init ]; then
	CLOUD_FILES=$( ${FIND_CMD} ${jailsysdir}/${jname}/cloud-init/ -mindepth 1 -type f | ${XARGS_CMD} )
	if [ -n "${CLOUD_FILES}" ]; then
		# its cloud-init VM

		[ -r ${jailsysdir}/${jname}/rc.conf_${jname} ] && . ${jailsysdir}/${jname}/rc.conf_${jname}

		# get first IP
		# todo: where ipv4_first facts?
		# todo: v6 ssh/ip
		OIFS="${IFS}"
		IFS=","
		for i in ${ip4_addr}; do
			first_ip4_addr="${i}"
			break
		done
		IFS="${OIFS}"

		if [ -z "${ci_user_add}" ]; then
				echo "qlogin.conf: warning: cloud-init-based VM but no ci_user_add settings" 1>&2
				echo "qlogin.conf: ${SSH_CMD} -oStrictHostKeyChecking=no -oConnectTimeout=15 -oServerAliveInterval=10 root@${first_ip4_addr}" 1>&2
				login_cmd="${SSH_CMD} -oStrictHostKeyChecking=no -oConnectTimeout=15 -oServerAliveInterval=10 root@${first_ip4_addr}"
		else
			eval _pubkey="\$ci_user_pubkey_${ci_user_add}"
			if [ -z "${_pubkey}" ]; then
				# try lookup for global
				eval _pubkey="\$ci_user_pubkey"
			fi
			if [ "${_pubkey}" = ".ssh/id_rsa.pub" ]; then
				echo "qlogin.conf: ${SSH_CMD} -oStrictHostKeyChecking=no -oConnectTimeout=15 -oServerAliveInterval=10 -i ${workdir}/.ssh/id_rsa ${ci_user_add}@${first_ip4_addr}" 1>&2
				login_cmd="${SSH_CMD} -oStrictHostKeyChecking=no -oConnectTimeout=15 -oServerAliveInterval=10 -i ${workdir}/.ssh/id_rsa ${ci_user_add}@${first_ip4_addr}"
			elif [ "${_pubkey}" = ".ssh/authorized_keys" ]; then
				# back compat for CBSD < 14.1.3
				echo "qlogin.conf: ${SSH_CMD} -oStrictHostKeyChecking=no -oConnectTimeout=15 -oServerAliveInterval=10 -i ${workdir}/.ssh/id_rsa ${ci_user_add}@${first_ip4_addr}" 1>&2
				login_cmd="${SSH_CMD} -oStrictHostKeyChecking=no -oConnectTimeout=15 -oServerAliveInterval=10 -i ${workdir}/.ssh/id_rsa ${ci_user_add}@${first_ip4_addr}"
			else
				if [ -r "${_pubkey}" ]; then
					echo "qlogin.conf: ${SSH_CMD} -oStrictHostKeyChecking=no -oConnectTimeout=15 -oServerAliveInterval=10 -i ${_pubkey} ${ci_user_add}@${first_ip4_addr}" 1>&2
					login_cmd="${SSH_CMD} -oStrictHostKeyChecking=no -oConnectTimeout=15 -oServerAliveInterval=10 -i ${_pubkey} ${ci_user_add}@${first_ip4_addr}"
				else
					echo "qlogin.conf: no such pubkey path: ${_pubkey}" 1>&2
					echo "qlogin.conf: ${SSH_CMD} -oStrictHostKeyChecking=no -oConnectTimeout=15 -oServerAliveInterval=10 ${ci_user_add}@${first_ip4_addr}" 1>&2
					login_cmd="${SSH_CMD} -oStrictHostKeyChecking=no -oConnectTimeout=15 -oServerAliveInterval=10 ${ci_user_add}@${first_ip4_addr}"
				fi
			fi
		fi
	else
		# not cloud-init, use default
		login_cmd="internal"
	fi
else
	# not cloud-init, use default
	login_cmd="internal"
fi
