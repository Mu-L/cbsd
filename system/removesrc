#!/usr/local/bin/cbsd
#v12.1.8
MYARG=""
MYOPTARG="ver arch basename stable"
MYDESC="Remove src-dir"
ADDHELP="ver=9_1 for 9.1 ver=. for current.\n\
stable=1 for RELENG_X\n"

. ${subrdir}/nc.subr
. ${cbsdinit}

if [ "${mod_cbsd_queue_enabled}" = "YES" -a -z "${MOD_CBSD_QUEUE_DISABLED}" ]; then
	readconf cbsd_queue.conf
	[ -z "${cbsd_queue_backend}" ] && MOD_CBSD_QUEUE_DISABLED="1"
fi

over="${ver}"
oarch="${arch}"

. ${subrdir}/time.subr
st_time=$( ${DATE_CMD} +%s )

. ${subrdir}/build.subr
readconf buildworld.conf
. ${subrdir}/universe.subr

init_distcc
init_notify
init_target_arch
init_srcdir
init_supported_arch
init_make_flags

LOCKFILE=${ftmpdir}/src_$( ${miscdir}/cbsd_md5 ${SRC_DIR} ).lock
makelock ${LOCKFILE}

SCM_REV="any"

# CBSD QUEUE
if [ "${mod_cbsd_queue_enabled}" = "YES" -a -z "${MOD_CBSD_QUEUE_DISABLED}" ]; then
	[ -n "${cbsd_removesrc_queue_name}" ] && ${cbsd_queue_backend} cbsd_queue_name=${cbsd_removesrc_queue_name} cmd=removesrc id=src${ver} status=1
fi

[ -d "${SRC_DIR}" ] && ${RM_CMD} -rf ${SRC_DIR}
if [ -d "${srcdir}/src_${ver}" ]; then
	# may contain etcupdate files
	${RMDIR_CMD} ${srcdir}/src_${ver} > /dev/null 2>&1 || true
fi

unregister_src

# CBSD QUEUE
if [ "${mod_cbsd_queue_enabled}" = "YES" -a -z "${MOD_CBSD_QUEUE_DISABLED}" ]; then
	[ -n "${cbsd_removesrc_queue_name}" ] && ${cbsd_queue_backend} cbsd_queue_name=${cbsd_removesrc_queue_name} cmd=removesrc id=src${ver} status=2
fi

end_time=$( ${DATE_CMD} +%s )
diff_time=$(( end_time - st_time ))
diff_time=$( displaytime ${diff_time} )
${ECHO} "${N1_COLOR}${CBSD_APP} done ${N2_COLOR}in ${diff_time}${N0_COLOR}"

exit 0
